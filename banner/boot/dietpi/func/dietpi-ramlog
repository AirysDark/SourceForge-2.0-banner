#!/bin/bash
{
	#////////////////////////////////////
	# SourceForge 2.0 RAMlog Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@sf2.com / sf2.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Location: /usr/lib/sf2/func/sf2-ramlog
	# - /var/log is mounted as tmpfs (RAMdisk) before this script runs.
	# - Stores /var/log/* attributes and ownerships to $FP_DISK during shutdown
	# - Restores /var/log/* attributes and ownerships from $FP_DISK during boot
	# - This allows us to vastly reduce filesystem I/O and increase logging performance
	#
	# Usage:
	# - /usr/lib/sf2/func/sf2-ramlog 0	= Restore from $FP_DISK to /var/log
	# - /usr/lib/sf2/func/sf2-ramlog 1	= Store from /var/log to $FP_DISK
	#////////////////////////////////////

	INPUT=$1
	EXIT_CODE=0
	readonly PROGRAM_NAME='SourceForge 2.0-RAMlog' FP_RAM='/var/log' FP_DISK='/var/tmp/sf2/logs/sf2-ramlog_store'

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	# Startup phase: Restore from disk
	if [[ $INPUT == 0 ]]
	then
		echo "$(date '+%Y-%m-%d %T') [ INFO ] $PROGRAM_NAME | Restoring $FP_RAM from $FP_DISK..."

		if [[ -d $FP_DISK ]]
		then
			# Restore empty logs with ownership and permissions from disk
			if cp -an --attributes-only "$FP_DISK/." "$FP_RAM/"
			then
				echo "$(date '+%Y-%m-%d %T') [  OK  ] $PROGRAM_NAME | Restored $FP_RAM from $FP_DISK."
			else
				EXIT_CODE=$?
				echo "$(date '+%Y-%m-%d %T') [FAILED] $PROGRAM_NAME | Restoring $FP_RAM from $FP_DISK failed with exit code: $EXIT_CODE"
			fi
		else
			echo "$(date '+%Y-%m-%d %T') [ INFO ] $PROGRAM_NAME | $FP_DISK does not exist. Aborting..."
		fi

	# Shutdown phase: Store to disk
	elif [[ $INPUT == 1 ]]
	then
		echo "$(date '+%Y-%m-%d %T') [ INFO ] $PROGRAM_NAME | Storing $FP_RAM to $FP_DISK..."

		# Assure empty $FP_DISK
		# shellcheck disable=SC2015
		[[ -d $FP_DISK ]] && rm -Rf "${FP_DISK:?}/"{,.??,.[^.]}* || mkdir -p "$FP_DISK"

		# Store empty logs with ownership and permissions to disk
		if cp -af --attributes-only "$FP_RAM/." "$FP_DISK/"
		then
			echo "$(date '+%Y-%m-%d %T') [  OK  ] $PROGRAM_NAME | Stored $FP_RAM to $FP_DISK."
		else
			EXIT_CODE=$?
			echo "$(date '+%Y-%m-%d %T') [FAILED] $PROGRAM_NAME | Storing $FP_RAM to $FP_DISK failed with exit code: $EXIT_CODE"
		fi
	else
		EXIT_CODE=1
		echo "$(date '+%Y-%m-%d %T') [FAILED] $PROGRAM_NAME | Unknown argument: \"$INPUT\". Aborting..."
	fi

	#-----------------------------------------------------------------------------------
	exit "$EXIT_CODE"
	#-----------------------------------------------------------------------------------
}
