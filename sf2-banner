#!/usr/bin/env bash
set -euo pipefail

# -------- Colors (fallback to basic if 256 not available) --------
supports_256() { tput colors 2>/dev/null | awk '{exit !($1>=256)}'; }
if supports_256; then
  C_RST=$'\e[0m'; C_BOLD=$'\e[1m'
  C_HEAD_TX=$'\e[38;5;195m'     # light cyan-white
  C_ACC=$'\e[38;5;81m'          # cyan
  C_WHITE=$'\e[97m'
  C_BUL=$'\e[97m'
  C_SEP=$'\e[38;5;24m'          # deep blue for lines
  C_LABEL=$'\e[1m'              # bold
  C_VAL=$'\e[0m'                # normal
else
  C_RST=$'\e[0m'; C_BOLD=$'\e[1m'
  C_HEAD_TX=$'\e[96m'
  C_ACC=$'\e[36m'
  C_WHITE=$'\e[97m'
  C_BUL=$'\e[97m'
  C_SEP=$'\e[34m'
  C_LABEL=$'\e[1m'
  C_VAL=$'\e[0m'
fi

# ASCII-only horizontal rule
hr() {
  cols=$(tput cols 2>/dev/null || echo 78)
  printf '%s%s%s\n' "${C_SEP}" "$(printf '%*s' "$cols" '' | tr ' ' '-')" "${C_RST}"
}

header_line() {
  local datetime
  datetime="$(date '+%H:%M - %a %d/%m/%y')"
  hr
  printf " %sSourceForge 2.0 Banner%s%s : %s%s\n" "${C_HEAD_TX}${C_BOLD}" "${C_RST}" "${C_VAL}" "${C_ACC}" "${datetime}${C_RST}"
  hr
}

print_info() {
  printf "%s- %sHostname:%s %s\n" "${C_ACC}" "${C_LABEL}" "${C_RST}" "$(hostname)"
  printf "%s- %sUptime:%s %s\n"   "${C_ACC}" "${C_LABEL}" "${C_RST}" "$(uptime -p)"
  ip=$(hostname -I 2>/dev/null | awk '{print $1}')
  printf "%s- %sLAN IP:%s %s\n"   "${C_ACC}" "${C_LABEL}" "${C_RST}" "${ip:-N/A}"
  load="$(awk '{print $1, $2, $3}' /proc/loadavg)"
  printf "%s- %sLoad:%s %s\n"     "${C_ACC}" "${C_LABEL}" "${C_RST}" "${load}"
  read -r mem_total mem_used mem_perc <<<"$(free -m | awk '/Mem:/ {printf "%dMi %dMi %.0f%%", $2, $3, ($3/$2)*100}')"
  printf "%s- %sRAM:%s %s / %s (%s)\n" "${C_ACC}" "${C_LABEL}" "${C_RST}" "${mem_used}" "${mem_total}" "${mem_perc}"
  disk=$(df -h / | awk 'NR==2 {print $3 " / " $2 " (" $5 ")"}')
  printf "%s- %sDisk:%s %s\n"     "${C_ACC}" "${C_LABEL}" "${C_RST}" "${disk}"
  hr
}

print_cmds() {
  echo
  printf "%s%-22s%s : %s%s%s\n" "${C_LABEL}" "sf2-config"          "${C_RST}" "${C_ACC}" "Toggle banner plugins"        "${C_RST}"
  printf "%s%-22s%s : %s%s%s\n" "${C_LABEL}" "sf2-software"        "${C_RST}" "${C_ACC}" "Service/DB/DDNS/HTTPS menu"   "${C_RST}"
  printf "%s%-22s%s : %s%s%s\n" "${C_LABEL}" "sf2-banner --update" "${C_RST}" "${C_ACC}" "Refresh banner + plugins"     "${C_RST}"
  printf "%s%-22s%s : %s%s%s\n" "${C_LABEL}" "htop"                "${C_RST}" "${C_ACC}" "Resource monitor"              "${C_RST}"
  printf "%s%-22s%s : %s%s%s\n" "${C_LABEL}" "cpu"                 "${C_RST}" "${C_ACC}" "CPU info & stats"              "${C_RST}"
  hr
}

# --update: clone & install from GitHub
if [[ "${1:-}" == "--update" ]]; then
  set -e
  REPO="${REPO_URL:-https://github.com/AirysDark/SourceForge-2.0-banner.git}"
  DIR="/tmp/sf2-update"
  command -v git >/dev/null 2>&1 || { sudo apt-get update -y >/dev/null 2>&1 || true; sudo apt-get install -y git >/dev/null 2>&1; }
  rm -rf "$DIR"
  git clone --depth 1 "$REPO" "$DIR"
  if [ -f "$DIR/install-sf2-complete.sh" ]; then
    sudo bash "$DIR/install-sf2-complete.sh"
  fi
  exec sf2-banner
fi

header_line
print_info
print_cmds
